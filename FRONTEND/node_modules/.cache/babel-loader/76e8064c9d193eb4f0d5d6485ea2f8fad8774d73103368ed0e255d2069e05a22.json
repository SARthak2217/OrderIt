{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle common errors\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  // Handle common error responses\n  if (error.response) {\n    // Server responded with error status\n    const {\n      status\n    } = error.response;\n    switch (status) {\n      case 401:\n        // Unauthorized - clear token and redirect to login\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        window.location.href = '/login';\n        break;\n      case 403:\n        // Forbidden\n        console.error('Access forbidden');\n        break;\n      case 404:\n        // Not found\n        console.error('Resource not found');\n        break;\n      case 500:\n        // Server error\n        console.error('Internal server error');\n        break;\n      default:\n        console.error(`HTTP Error: ${status}`);\n    }\n  } else if (error.request) {\n    // Network error\n    console.error('Network error - please check your connection');\n  } else {\n    // Other error\n    console.error('An error occurred:', error.message);\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","status","removeItem","window","location","href","console","message"],"sources":["/Users/sarthak/Desktop/OrderIt/FRONTEND/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle common errors\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    // Handle common error responses\n    if (error.response) {\n      // Server responded with error status\n      const { status } = error.response;\n      \n      switch (status) {\n        case 401:\n          // Unauthorized - clear token and redirect to login\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n          window.location.href = '/login';\n          break;\n        case 403:\n          // Forbidden\n          console.error('Access forbidden');\n          break;\n        case 404:\n          // Not found\n          console.error('Resource not found');\n          break;\n        case 500:\n          // Server error\n          console.error('Internal server error');\n          break;\n        default:\n          console.error(`HTTP Error: ${status}`);\n      }\n    } else if (error.request) {\n      // Network error\n      console.error('Network error - please check your connection');\n    } else {\n      // Other error\n      console.error('An error occurred:', error.message);\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;EACrEC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAP,GAAG,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAhB,GAAG,CAACQ,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAK;EACZ,OAAOA,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EACT;EACA,IAAIA,KAAK,CAACG,QAAQ,EAAE;IAClB;IACA,MAAM;MAAEC;IAAO,CAAC,GAAGJ,KAAK,CAACG,QAAQ;IAEjC,QAAQC,MAAM;MACZ,KAAK,GAAG;QACN;QACAP,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;QAChCR,YAAY,CAACQ,UAAU,CAAC,MAAM,CAAC;QAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;QAC/B;MACF,KAAK,GAAG;QACN;QACAC,OAAO,CAACT,KAAK,CAAC,kBAAkB,CAAC;QACjC;MACF,KAAK,GAAG;QACN;QACAS,OAAO,CAACT,KAAK,CAAC,oBAAoB,CAAC;QACnC;MACF,KAAK,GAAG;QACN;QACAS,OAAO,CAACT,KAAK,CAAC,uBAAuB,CAAC;QACtC;MACF;QACES,OAAO,CAACT,KAAK,CAAC,eAAeI,MAAM,EAAE,CAAC;IAC1C;EACF,CAAC,MAAM,IAAIJ,KAAK,CAACP,OAAO,EAAE;IACxB;IACAgB,OAAO,CAACT,KAAK,CAAC,8CAA8C,CAAC;EAC/D,CAAC,MAAM;IACL;IACAS,OAAO,CAACT,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAACU,OAAO,CAAC;EACpD;EAEA,OAAOT,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAehB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}